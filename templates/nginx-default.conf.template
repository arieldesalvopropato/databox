server {
    listen 80;
    server_name _;

    # redirect all http request to https
    rewrite ^/(.*)$ https://$host$request_uri? permanent;
}

server {
  listen 443 ssl;
  server_name cockpit.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass https://{{ hostip }}:9090;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
    gzip off;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}


server {
  listen 443 ssl;
  server_name portainer.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:9000;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name dashy.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:4000;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name duplicati.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:8200;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name kasm.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass https://{{ hostip }}:3000;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl http2;
  server_name uptimekuma.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Host $host;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:3001;
    proxy_http_version 1.1;
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection "upgrade";
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name pihole.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:81;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name jellyfin.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:8096;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name transmission.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:9091;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name nextcloud.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass https://{{ hostip }}:2443;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name filebrowser.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:8080;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name sonarr.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:8989;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

server {
  listen 443 ssl;
  server_name jackett.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:9117;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}

 server {
  listen 443 ssl;
  server_name kibana.{{ domain }};

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  location / {
    auth_basic "Restricted Access";
    auth_basic_user_file /{{ volumespath }}/docker/nginx/htpasswd.kibana.users;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host:443;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://{{ hostip }}:5601;
  } 
  error_page 403 404 500 502 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root /var/www/default;
   }
}