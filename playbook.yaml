#.SYNOPSIS Ansible playbook. Autor: Ariel De Salvo Propato.
#.DESCRIPTION Script created with the goal of deploying a home server, with different services running in containers.
#.NOTES Many of the configurations are dynamic, first check the setupvariables.yml file inside the config folder.
#.COMPONENT Ansible. 

---
  # Play1 - Docker preparation tasks.
  - name: Play Dir/Config - Create Docker directories and configuration files.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
    #Some of the directories will be created automatically with the docker-compose,
    #these directories are created only because it had config files.
      - name: Create a directory for docker volumes.
        file:
          path: /{{ volumespath }}/docker/{{ item }}
          owner: root
          group: root
          state: directory
          mode: 0755
        with_items:
        - pihole
        - pihole/etc-pihole
        - nginx
        - nginx/certs
        - nginx/html
        - dashy
        - samba
        - filebeat
        - securitylogs

      - name: Create a directory for share with Samba (Docker).
        file:
          path: /{{ volumespath }}/docker/samba/public
          owner: root
          group: root
          state: directory
          mode: 0755

      - name: Creating file for local DNS in Pi-Hole.
        template:
          src: templates/pihole-custom.list
          dest: /{{ volumespath }}/docker/pihole/etc-pihole/custom.list
      
      - name: Creating config file for Pi-Hole.
        template:
          src: templates/pihole-FTL.conf
          dest: /{{ volumespath }}/docker/pihole/etc-pihole/pihole-FTL.conf

      - name: Creating file for Nginx configuration.
        template:
          src: templates/nginx-default.conf.template
          dest: /{{ volumespath }}/docker/nginx/nginx-default.conf.template
      
      - name: Creating file for Nginx error page.
        template:
          src: templates/error.html
          dest: /{{ volumespath }}/docker/nginx/html/error.html

      - name: Creating file for Dashy configuration.
        template:
          src: templates/dashy-config.yml
          dest: /{{ volumespath }}/docker/dashy/config.yml

      - name: Copying icons for Dashy.
        ansible.builtin.command: cp -R templates/item-icons /{{ volumespath }}/docker/dashy/item-icons

      - name: Creating file for Filebeat configuration.
        template:
          src: templates/filebeat-config.yml
          dest: /{{ volumespath }}/docker/filebeat/filebeat.yml

      - name: Creating the Docker-Compose file.
        template:
          src: templates/docker-compose.yml
          dest: /{{ volumespath }}/docker-compose.yml

  # Play2 - Server preparation tasks.
  - name: Play Update/Install - Update the system and Install of the required packages.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Update all packages to the latest version.
        apt:
         upgrade: dist

      - name: Install of Cockpit.
        apt:
          name: cockpit
          state: present

      - name: Install of mkcert.
        apt:
          name: mkcert
          state: present
        when: (ansible_facts['distribution'] == "Ubuntu")

      - name: Install of mkcert.
        apt:
          name: libnss3-tools
          state: present
        when: (ansible_facts['distribution'] == "Debian")

      - name: Install of mkcert.
        ansible.builtin.get_url:
         url: https://github.com/FiloSottile/mkcert/releases/download/v1.4.3/mkcert-v1.4.3-linux-amd64
         dest: /usr/bin/mkcert
        when: (ansible_facts['distribution'] == "Debian")

      - name: Install of mkcert.
        file:
          path: /usr/bin/mkcert
          state: file
          mode: 0755
        when: (ansible_facts['distribution'] == "Debian")

      - name: Install of Docker.
        apt:
          name: docker.io
          state: present

      - name: Install of Docker-Compose.
        apt:
          name: docker-compose
          state: present
        when: (ansible_facts['distribution'] == "Ubuntu")

      - name: Install of Docker-Compose.
        ansible.builtin.get_url:
         url: https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-linux-x86_64
         dest: /usr/local/bin/docker-compose
        when: (ansible_facts['distribution'] == "Debian")

      - name: Install of Docker-Compose.
        file:
          path: /usr/local/bin/docker-compose
          state: file
          mode: 0755
        when: (ansible_facts['distribution'] == "Debian")

      - name: Install of Curator
        apt:
          name: elasticsearch-curator
          state: present

  # Play3 - Certificates related tasks.
  - name: Play MkCert - rootCA installation and creation of certificates for services.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Install the rootCA.
        ansible.builtin.command: mkcert -install

      - name: Creating the certificates.
        ansible.builtin.command: mkcert -key-file key.pem -cert-file cert.pem duplicati.{{ domain }} dashy.{{ domain }} jellyfin.{{ domain }} kasm.{{ domain }} nextcloud.{{ domain }} cockpit.{{ domain }} portainer.{{ domain }} pihole.{{ domain }} uptimekuma.{{ domain }} transmission.{{ domain }} resilio.{{ domain }} syncthing.{{ domain }} filebrowser.{{ domain }} sonarr.{{ domain }} jackett.{{ domain }} kibana.{{ domain }}

      - name: Moving the certificates to nginx cert folder.
        ansible.builtin.command: mv key.pem cert.pem /{{ volumespath }}/docker/nginx/certs/

      - name: Get CAroot dir.
        shell: mkcert -CAROOT
        register: CAroot

      - name: Copying the rootCA certificate to the share folder.
        ansible.builtin.command: cp /root/.local/share/mkcert/rootCA.pem /{{ volumespath }}/docker/samba/public/rootCA.pem

  # Play4 - Cockpit related tasks.
  - name: Play Cockpit - Setup of Cockpit.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Creating file for rsync configuration.
        template:
          src: templates/cockpit.conf
          dest: /etc/cockpit/cockpit.conf

      - name: Restarting the service.
        ansible.builtin.command: systemctl restart cockpit.service

  # Play5 - Curator related tasks.
  - name: Play Curator - setup of curator cron task.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Setup task in cron to remove old logs from EKF
        ansible.builtin.cron:
          name: "Delete FileBeat indices older then 30 days"
          minute: "0"
          hour: "1"
          job: curator_cli --host localhost:9200 delete_indices --filter_list {{ curator_filter }}

  # Play6 - Docker Bench for Security related tasks.
  - name: Play Docker Bench - setup of Docker Bench for Security tasks.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Clone Docker Bench Security repo.
        ansible.builtin.git:
          repo: https://github.com/docker/docker-bench-security.git
          dest: /{{ volumespath }}/docker-bench-security

      - name: Setup task in cron to scan the environment.
        ansible.builtin.cron:
          name: "Running Docker Bench for Security"
          day: "1"
          minute: "0"
          hour: "1"
          job: cd {{ volumespath }}/docker-bench-security; sudo sh docker-bench-security.sh -l {{ volumespath }}/docker/securitylogs/security-report
  
  # Play7 - Docker-Compose related tasks.
  - name: Play Docker-Compose - Deploy of docker using Docker-Compose yml file.
    hosts: servers
    vars_files:
      - config/setupvariables.yml
    become: yes
    become_user: root
    tasks:
      - name: Running Docker-Compose.
        shell: chdir=/{{ volumespath }} docker-compose --profile active up -d
        register: output

      - debug:
          msg: "{{ output.stderr_lines }}"

      - name: Restarting Portainer to avoid issues related to the volume.
        ansible.builtin.command: docker restart portainer